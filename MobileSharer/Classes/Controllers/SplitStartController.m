
#import "SplitStartController.h"

#import "StartController.h"
#import "WebController.h"

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
@interface SplitStartController()

- (void)setupURLRouting;

@end



///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
@implementation SplitStartController


///////////////////////////////////////////////////////////////////////////////////////////////////
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
  if (self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil]) {
    [self setupURLRouting];
  }
  
  return self;
}


///////////////////////////////////////////////////////////////////////////////////////////////////
- (void)viewWillAppear:(BOOL)animated {
  [super viewWillAppear:animated];
  
  [self.leftNavigator openURLs:kAppStartURLPath, nil];
  [self.rightNavigator openURLs:@"", nil];
}


///////////////////////////////////////////////////////////////////////////////////////////////////
- (id)willOpenUrlPath:(NSURL*)url {
  [self.rightNavigator openURLAction:[TTURLAction actionWithURLPath:[url absoluteString]]];
  
  [self.popoverSplitController dismissPopoverAnimated:YES];
  
  // We need to do this because the right navigator clobbered the right navigation controller
  // and our button along with it.
  [self updateSplitViewButton];
  
  // Don't create a view controller here; we're forwarding the URL routing.
  return nil;
}


///////////////////////////////////////////////////////////////////////////////////////////////////
- (void)routeLeftNavigator {
  TTURLMap* map = self.leftNavigator.URLMap;
  
  // Forward all unhandled URL actions to the right navigator.
  [map                    from: @"*"
                      toObject: self
                      selector: @selector(willOpenUrlPath:)];
  
  [map                    from: kAppStartURLPath
              toViewController: [StartController class]];
}


///////////////////////////////////////////////////////////////////////////////////////////////////
- (void)routeRightNavigator {
  TTURLMap* map = self.rightNavigator.URLMap;
  
  
  [map                    from: @"*"
              toViewController: [WebController class]];
}


///////////////////////////////////////////////////////////////////////////////////////////////////
- (void)setupURLRouting {
  [self routeLeftNavigator];
  [self routeRightNavigator];
}

@end

